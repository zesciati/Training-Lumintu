function F(e){return e?`/auth/login/${e}`:"/auth/login"}var A="/",L=(e,t)=>(e.endsWith(A)&&(e=e.slice(0,-1)),t.startsWith(A)||(t=A+t),e+t),g=(e,t,o)=>{let a=e.pathname===A?t:L(e.pathname,t),s=new globalThis.URL(a,e);if(o)for(let[c,i]of Object.entries(J(o)))if(i&&typeof i=="object"&&!Array.isArray(i))for(let[p,u]of Object.entries(i))s.searchParams.set(`${c}[${p}]`,String(u));else s.searchParams.set(c,i);return s};function $(e){return typeof e!="object"||!e?!1:"headers"in e&&"ok"in e&&"json"in e&&typeof e.json=="function"&&"text"in e&&typeof e.json=="function"}async function k(e){if(!(typeof e!="object"||!e)){if($(e)){let t=e.headers.get("Content-Type")?.toLowerCase();if(t?.startsWith("application/json")||t?.startsWith("application/health+json")){let o=await e.json();if(!e.ok||"errors"in o)throw o;return"data"in o?o.data:o}if(t?.startsWith("text/html")||t?.startsWith("text/plain")){let o=await e.text();if(!e.ok)throw o;return o}return e}if("errors"in e)throw e;return"data"in e?e.data:e}}var b=async(e,t,o=globalThis.fetch)=>(t.headers=typeof t.headers=="object"&&!Array.isArray(t.headers)?t.headers:{},o(e,t).then(a=>k(a).catch(s=>{let c={errors:s&&typeof s=="object"&&"errors"in s?s.errors:s,response:a};return s&&typeof s=="object"&&"data"in s&&(c.data=s.data),Promise.reject(c)})));var G=()=>{let e=null;return{get:async()=>e,set:async t=>{e=t}}};var H={msRefreshBeforeExpires:3e4,autoRefresh:!0},_=2**31-1,ne=(e="cookie",t={})=>o=>{let a={...H,...t},s=null,c=null,i=a.storage??G(),p=async()=>i.set({access_token:null,refresh_token:null,expires:null,expires_at:null}),u=async()=>{try{await s}finally{s=null}},f=async()=>{let h=await i.get();return s||!h?.expires_at||h.expires_at<new Date().getTime()+a.msRefreshBeforeExpires&&I().catch(l=>{}),u()},D=async h=>{let l=h.expires??0;h.expires_at=new Date().getTime()+l,await i.set(h),a.autoRefresh&&l>a.msRefreshBeforeExpires&&l<_&&(c&&clearTimeout(c),c=setTimeout(()=>{c=null,I().catch(Q=>{})},l-a.msRefreshBeforeExpires))},I=async()=>(s=(async()=>{let l=await i.get();await p();let Q={method:"POST",headers:{"Content-Type":"application/json"}};"credentials"in a&&(Q.credentials=a.credentials);let C={mode:e};e==="json"&&l?.refresh_token&&(C.refresh_token=l.refresh_token),Q.body=JSON.stringify(C);let m=g(o.url,"/auth/refresh");return b(m.toString(),Q,o.globals.fetch).then(n=>D(n).then(()=>n))})(),s);return{refresh:I,async login(h,l,Q={}){await p();let C={email:h,password:l};"otp"in Q&&(C.otp=Q.otp),C.mode=Q.mode??e;let m=F(Q.provider),n=g(o.url,m),y={method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(C)};"credentials"in a&&(y.credentials=a.credentials);let d=await b(n.toString(),y,o.globals.fetch);return await D(d),d},async logout(){let h=await i.get(),l={method:"POST",headers:{"Content-Type":"application/json"}};"credentials"in a&&(l.credentials=a.credentials);let Q={mode:e};e==="json"&&h?.refresh_token&&(Q.refresh_token=h.refresh_token),l.body=JSON.stringify(Q);let C=g(o.url,"/auth/logout");await b(C.toString(),l,o.globals.fetch),this.stopRefreshing(),await p()},stopRefreshing(){c&&clearTimeout(c)},async getToken(){return await f().catch(()=>{}),(await i.get())?.access_token??null},async setToken(h){return i.set({access_token:h,refresh_token:null,expires:null,expires_at:null})}}};var pe=e=>t=>{let o=e??null;return{async getToken(){return o},async setToken(a){o=a}}};var K={fetch:globalThis.fetch,WebSocket:globalThis.WebSocket,URL:globalThis.URL,logger:globalThis.console},le=(e,t={})=>{let o=t.globals?{...K,...t.globals}:K;return{globals:o,url:new o.URL(e),with(a){return{...this,...a(this)}}}};var V={},Te=(e={})=>t=>{let o={...V,...e};return{async query(a,s,c="items"){let i={method:"POST",body:JSON.stringify({query:a,variables:s})};"credentials"in o&&(i.credentials=o.credentials);let p={};if("getToken"in this){let D=await this.getToken();D&&(p.Authorization=`Bearer ${D}`)}"Content-Type"in p||(p["Content-Type"]="application/json"),i.headers=p;let u=c==="items"?"/graphql":"/graphql/system",f=g(t.url,u);return await b(f.toString(),i,t.globals.fetch)}}};function N(e){return JSON.stringify({...e,type:"auth"})}var W=()=>JSON.stringify({type:"pong"});function*v(){let e=1;for(;;)yield String(e),e++}var w=(e,t=1e3)=>new Promise((o,a)=>{let s=u=>{try{let f=JSON.parse(u.data);typeof f=="object"&&!Array.isArray(f)&&f!==null?(i(),o(f)):(i(),c())}catch{i(),o(u)}},c=()=>a(),i=()=>{clearTimeout(p),e.removeEventListener("message",s),e.removeEventListener("error",c),e.removeEventListener("close",c)};e.addEventListener("message",s),e.addEventListener("error",c),e.addEventListener("close",c);let p=setTimeout(()=>{i(),o(void 0)},t)});var M={authMode:"handshake",heartbeat:!0,debug:!1,reconnect:{delay:1e3,retries:10}};function ve(e={}){return t=>{e={...M,...e};let o=v(),a={code:"closed"},s={attempts:0,active:!1},c=!1,i=new Set,p=m=>"getToken"in m,u=(m,...n)=>e.debug&&t.globals.logger[m]("[Directus SDK]",...n),f=async(m,n)=>{let y=new t.globals.URL(m);if(e.authMode==="strict"&&p(n)){let d=await n.getToken();d&&y.searchParams.set("access_token",d)}return y.toString()},D=async m=>{if("url"in e)return await f(e.url,m);if(["ws:","wss:"].includes(t.url.protocol))return await f(t.url,m);let n=new t.globals.URL(t.url.toString());return n.protocol=t.url.protocol==="https:"?"wss:":"ws:",n.pathname="/websocket",await f(n,m)},I=m=>{let n=new Promise((y,d)=>{if(!e.reconnect||c)return d();if(u("info",`reconnect #${s.attempts} `+(s.attempts>=e.reconnect.retries?"maximum retries reached":`trying again in ${Math.max(100,e.reconnect.delay)}ms`)),s.active)return s.active;if(s.attempts>=e.reconnect.retries)return s.attempts=-1,d();setTimeout(()=>m.connect().then(O=>(i.forEach(S=>{m.sendMessage(S)}),O)).then(y).catch(d),Math.max(100,e.reconnect.delay))});s.attempts+=1,s.active=n.catch(()=>{}).finally(()=>{s.active=!1})},h={open:new Set([]),error:new Set([]),close:new Set([]),message:new Set([])};function l(m){return"type"in m&&"status"in m&&"error"in m&&"code"in m.error&&"message"in m.error&&m.type==="auth"&&m.status==="error"}async function Q(m,n){if(a.code==="open"){if(m.error.code==="TOKEN_EXPIRED"&&(u("warn","Authentication token expired!"),p(n))){let y=await n.getToken();if(!y)throw Error("No token for re-authenticating the websocket");a.connection.send(N({access_token:y}))}if(m.error.code==="AUTH_TIMEOUT")return a.firstMessage&&e.authMode==="public"?(u("warn",'Authentication failed! Currently the "authMode" is "public" try using "handshake" instead'),e.reconnect=!1):u("warn","Authentication timed out!"),a.connection.close();if(m.error.code==="AUTH_FAILED"){if(a.firstMessage&&e.authMode==="public")return u("warn",'Authentication failed! Currently the "authMode" is "public" try using "handshake" instead'),e.reconnect=!1,a.connection.close();u("warn","Authentication failed!")}}}let C=async m=>{for(;a.code==="open";){let n=await w(a.connection).catch(()=>{});if(n){if(l(n)){await Q(n,m),a.firstMessage=!1;continue}if(e.heartbeat&&n.type==="ping"){a.connection.send(W()),a.firstMessage=!1;continue}h.message.forEach(y=>{a.code==="open"&&y.call(a.connection,n)}),a.firstMessage=!1}}};return{async connect(){if(c=!1,a.code==="connecting")return await a.connection;if(a.code!=="closed")throw new Error(`Cannot connect when state is "${a.code}"`);let m=this,n=await D(m);u("info",`Connecting to ${n}...`);let y=new Promise((d,O)=>{let S=!1,T=new t.globals.WebSocket(n);T.addEventListener("open",async P=>{if(u("info","Connection open."),a={code:"open",connection:T,firstMessage:!0},s.attempts=0,s.active=!1,C(m),e.authMode==="handshake"&&p(m)){let R=await m.getToken();if(!R)throw Error("No token for authenticating the websocket. Make sure to provide one or call the login() function beforehand.");T.send(N({access_token:R}));let E=await w(T);if(E&&"type"in E&&"status"in E&&E.type==="auth"&&E.status==="ok")u("info","Authentication successful!");else return O("Authentication failed while opening websocket connection")}h.open.forEach(R=>R.call(T,P)),S=!0,d(T)}),T.addEventListener("error",P=>{u("warn","Connection errored."),h.error.forEach(R=>R.call(T,P)),T.close(),a={code:"error"},S||O(P)}),T.addEventListener("close",P=>{u("info","Connection closed."),h.close.forEach(R=>R.call(T,P)),o=v(),a={code:"closed"},I(this),S||O(P)})});return a={code:"connecting",connection:y},y},disconnect(){c=!0,a.code==="open"&&a.connection.close()},onWebSocket(m,n){if(m==="message"){let y=function(d){if(typeof d.data!="string")return n.call(this,d);try{return n.call(this,JSON.parse(d.data))}catch{return n.call(this,d)}};return h[m].add(y),()=>h[m].delete(y)}return h[m].add(n),()=>h[m].delete(n)},sendMessage(m){if(a.code!=="open")throw new Error('Cannot send messages without an open connection. Make sure you are calling "await client.connect()".');if(typeof m=="string")return a.connection.send(m);"uid"in m||(m.uid=o.next().value),a.connection.send(JSON.stringify(m))},async subscribe(m,n={}){"uid"in n||(n.uid=o.next().value),i.add({...n,collection:m,type:"subscribe"}),a.code!=="open"&&(u("info","No connection available for subscribing!"),await this.connect()),this.sendMessage({...n,collection:m,type:"subscribe"});let y=!0;async function*d(){for(;y&&a.code==="open";){let S=await w(a.connection).catch(()=>{});if(S){if("type"in S&&"status"in S&&S.type==="subscribe"&&S.status==="error")throw S;"type"in S&&"uid"in S&&S.type==="subscription"&&S.uid===n.uid&&(yield S)}}e.reconnect&&s.active&&(await s.active,a.code==="open"&&(a.connection.send(JSON.stringify({...n,collection:m,type:"subscribe"})),yield*d()))}let O=()=>{i.delete({...n,collection:m,type:"subscribe"}),this.sendMessage({uid:n.uid,type:"unsubscribe"}),y=!1};return{subscription:d(),unsubscribe:O}}}}}var Je=e=>new Promise(t=>setTimeout(()=>t(),e));var qe=(e,t,o={})=>()=>{let a=F(o.provider),s={email:e,password:t};return"otp"in o&&(s.otp=o.otp),s.mode=o.mode??"cookie",{path:a,method:"POST",body:JSON.stringify(s)}};var Xe=(e,t="cookie")=>()=>({path:"/auth/logout",method:"POST",body:JSON.stringify(e?{refresh_token:e,mode:t}:{mode:t})});var Ze=(e,t)=>()=>({path:"/auth/password/request",method:"POST",body:JSON.stringify({email:e,...t?{reset_url:t}:{}})});var tt=(e,t)=>()=>({path:"/auth/password/reset",method:"POST",body:JSON.stringify({token:e,password:t})});var ot=(e=!1)=>()=>({path:e?"/auth?sessionOnly":"/auth",method:"GET"});var st=(e="cookie",t)=>()=>({path:"/auth/refresh",method:"POST",body:JSON.stringify(e==="json"?{refresh_token:t,mode:e}:{mode:e})});var dt=(e,t)=>()=>({path:"/collections",params:t??{},body:JSON.stringify(e),method:"POST"});var lt=(e,t)=>()=>({path:"/comments",params:t??{},body:JSON.stringify(e),method:"POST"}),ft=(e,t)=>()=>({path:"/comments",params:t??{},body:JSON.stringify(e),method:"POST"});var xt=(e,t)=>()=>({path:"/dashboards",params:t??{},body:JSON.stringify(e),method:"POST"}),Tt=(e,t)=>()=>({path:"/dashboards",params:t??{},body:JSON.stringify(e),method:"POST"});var Rt=(e,t,o)=>()=>({path:`/fields/${e}`,params:o??{},body:JSON.stringify(t),method:"POST"});var bt=(e,t)=>()=>({path:"/files",method:"POST",body:e,params:t??{},headers:{"Content-Type":"multipart/form-data"}}),Dt=(e,t={},o)=>()=>({path:"/files/import",method:"POST",body:JSON.stringify({url:e,data:t}),params:o??{}});var Pt=(e,t)=>()=>({path:"/flows",params:t??{},body:JSON.stringify(e),method:"POST"}),jt=(e,t)=>()=>({path:"/flows",params:t??{},body:JSON.stringify(e),method:"POST"});var Et=(e,t)=>()=>({path:"/folders",params:t??{},body:JSON.stringify(e),method:"POST"}),Ft=(e,t)=>()=>({path:"/folders",params:t??{},body:JSON.stringify(e),method:"POST"});function j(e){return["directus_access","directus_activity","directus_collections","directus_comments","directus_fields","directus_files","directus_folders","directus_migrations","directus_permissions","directus_policies","directus_presets","directus_relations","directus_revisions","directus_roles","directus_sessions","directus_settings","directus_users","directus_webhooks","directus_dashboards","directus_panels","directus_notifications","directus_shares","directus_flows","directus_operations","directus_translations","directus_versions","directus_extensions"].includes(e)}var vt=(e,t,o)=>()=>{let a=String(e);if(j(a))throw new Error("Cannot use createItems for core collections");return{path:`/items/${a}`,params:o??{},body:JSON.stringify(t),method:"POST"}},Ut=(e,t,o)=>()=>{let a=String(e);if(j(a))throw new Error("Cannot use createItem for core collections");return{path:`/items/${a}`,params:o??{},body:JSON.stringify(t),method:"POST"}};var $t=(e,t)=>()=>({path:"/notifications",params:t??{},body:JSON.stringify(e),method:"POST"}),kt=(e,t)=>()=>({path:"/notifications",params:t??{},body:JSON.stringify(e),method:"POST"});var Kt=(e,t)=>()=>({path:"/operations",params:t??{},body:JSON.stringify(e),method:"POST"}),Wt=(e,t)=>()=>({path:"/operations",params:t??{},body:JSON.stringify(e),method:"POST"});var Ht=(e,t)=>()=>({path:"/panels",params:t??{},body:JSON.stringify(e),method:"POST"}),_t=(e,t)=>()=>({path:"/panels",params:t??{},body:JSON.stringify(e),method:"POST"});var Mt=(e,t)=>()=>({path:"/permissions",params:t??{},body:JSON.stringify(e),method:"POST"}),Bt=(e,t)=>()=>({path:"/permissions",params:t??{},body:JSON.stringify(e),method:"POST"});var zt=(e,t)=>()=>({path:"/policies",params:t??{},body:JSON.stringify(e),method:"POST"}),Xt=(e,t)=>()=>({path:"/policies",params:t??{},body:JSON.stringify(e),method:"POST"});var Zt=(e,t)=>()=>({path:"/presets",params:t??{},body:JSON.stringify(e),method:"POST"}),er=(e,t)=>()=>({path:"/presets",params:t??{},body:JSON.stringify(e),method:"POST"});var rr=e=>()=>({path:"/relations",body:JSON.stringify(e),method:"POST"});var ar=(e,t)=>()=>({path:"/roles",params:t??{},body:JSON.stringify(e),method:"POST"}),sr=(e,t)=>()=>({path:"/roles",params:t??{},body:JSON.stringify(e),method:"POST"});var ir=(e,t)=>()=>({path:"/shares",params:t??{},body:JSON.stringify(e),method:"POST"}),nr=(e,t)=>()=>({path:"/shares",params:t??{},body:JSON.stringify(e),method:"POST"});var pr=(e,t)=>()=>({path:"/translations",params:t??{},body:JSON.stringify(e),method:"POST"}),ur=(e,t)=>()=>({path:"/translations",params:t??{},body:JSON.stringify(e),method:"POST"});var yr=(e,t)=>()=>({path:"/users",params:t??{},body:JSON.stringify(e),method:"POST"}),dr=(e,t)=>()=>({path:"/users",params:t??{},body:JSON.stringify(e),method:"POST"});var lr=(e,t)=>()=>({path:"/versions",params:t??{},body:JSON.stringify(e),method:"POST"}),fr=(e,t)=>()=>({path:"/versions",params:t??{},body:JSON.stringify(e),method:"POST"});var xr=(e,t)=>()=>({path:"/webhooks",params:t??{},body:JSON.stringify(e),method:"POST"}),Tr=(e,t)=>()=>({path:"/webhooks",params:t??{},body:JSON.stringify(e),method:"POST"});var Hr=e=>()=>({path:`/collections/${e}`,method:"DELETE"});var U=e=>{let t=(o,a=[])=>{if(typeof o=="object"){let s=[];for(let c in o){let i=o[c]??[];if(Array.isArray(i))for(let p of i)s.push(t(p,[...a,c]));else if(typeof i=="object")for(let p of Object.keys(i)){let u=i[p];for(let f of u)s.push(t(f,[...a,`${c}:${p}`]))}}return s.flatMap(c=>c)}return[...a,String(o)].join(".")};return e.flatMap(o=>t(o))},J=e=>{let t={};Array.isArray(e.fields)&&e.fields.length>0&&(t.fields=U(e.fields).join(",")),e.filter&&Object.keys(e.filter).length>0&&(t.filter=JSON.stringify(e.filter)),e.search&&(t.search=e.search),"sort"in e&&e.sort&&(t.sort=typeof e.sort=="string"?e.sort:e.sort.join(",")),typeof e.limit=="number"&&e.limit>=-1&&(t.limit=String(e.limit)),typeof e.offset=="number"&&e.offset>=0&&(t.offset=String(e.offset)),typeof e.page=="number"&&e.page>=1&&(t.page=String(e.page)),e.deep&&Object.keys(e.deep).length>0&&(t.deep=JSON.stringify(e.deep)),e.alias&&Object.keys(e.alias).length>0&&(t.alias=JSON.stringify(e.alias)),e.aggregate&&Object.keys(e.aggregate).length>0&&(t.aggregate=JSON.stringify(e.aggregate)),e.groupBy&&e.groupBy.length>0&&(t.groupBy=e.groupBy.join(","));for(let[o,a]of Object.entries(e))o in t||(typeof a=="string"||typeof a=="number"||typeof a=="boolean"?t[o]=String(a):t[o]=JSON.stringify(a));return t};var r=(e,t)=>{if(e.length===0)throw new Error(t)};var x=(e,t)=>{if(j(String(e)))throw new Error(t)};var ro=e=>()=>{let t={};return Array.isArray(e)?(r(e,"keysOrQuery cannot be empty"),t={keys:e}):(r(Object.keys(e),"keysOrQuery cannot be empty"),t={query:e}),{path:"/comments",body:JSON.stringify(t),method:"DELETE"}},oo=e=>()=>(r(String(e),"Key cannot be empty"),{path:`/comments/${e}`,method:"DELETE"});var mo=e=>()=>(r(e,"Keys cannot be empty"),{path:"/dashboards",body:JSON.stringify(e),method:"DELETE"}),io=e=>()=>(r(e,"Key cannot be empty"),{path:`/dashboards/${e}`,method:"DELETE"});var po=(e,t)=>()=>(r(e,"Collection cannot be empty"),r(t,"Field cannot be empty"),{path:`/fields/${e}/${t}`,method:"DELETE"});var yo=e=>()=>(r(e,"Keys cannot be empty"),{path:"/files",body:JSON.stringify(e),method:"DELETE"}),So=e=>()=>(r(e,"Key cannot be empty"),{path:`/files/${e}`,method:"DELETE"});var Qo=e=>()=>(r(e,"Keys cannot be empty"),{path:"/flows",body:JSON.stringify(e),method:"DELETE"}),xo=e=>()=>(r(e,"Key cannot be empty"),{path:`/flows/${e}`,method:"DELETE"});var Ro=e=>()=>(r(e,"Keys cannot be empty"),{path:"/folders",body:JSON.stringify(e),method:"DELETE"}),go=e=>()=>(r(e,"Key cannot be empty"),{path:`/folders/${e}`,method:"DELETE"});var Oo=(e,t)=>()=>{let o={};return r(String(e),"Collection cannot be empty"),x(e,"Cannot use deleteItems for core collections"),Array.isArray(t)?(r(t,"keysOrQuery cannot be empty"),o={keys:t}):(r(Object.keys(t),"keysOrQuery cannot be empty"),o={query:t}),{path:`/items/${e}`,body:JSON.stringify(o),method:"DELETE"}},Po=(e,t)=>()=>(r(String(e),"Collection cannot be empty"),x(e,"Cannot use deleteItem for core collections"),r(String(t),"Key cannot be empty"),{path:`/items/${e}/${t}`,method:"DELETE"});var Eo=e=>()=>(r(e,"Keys cannot be empty"),{path:"/notifications",body:JSON.stringify(e),method:"DELETE"}),Fo=e=>()=>(r(e,"Key cannot be empty"),{path:`/notifications/${e}`,method:"DELETE"});var No=e=>()=>(r(e,"Keys cannot be empty"),{path:"/operations",body:JSON.stringify(e),method:"DELETE"}),vo=e=>()=>(r(e,"Key cannot be empty"),{path:`/operations/${e}`,method:"DELETE"});var $o=e=>()=>(r(e,"Keys cannot be empty"),{path:"/panels",body:JSON.stringify(e),method:"DELETE"}),ko=e=>()=>(r(e,"Key cannot be empty"),{path:`/panels/${e}`,method:"DELETE"});var Wo=e=>()=>(r(e,"Keys cannot be empty"),{path:"/permissions",body:JSON.stringify(e),method:"DELETE"}),Lo=e=>()=>(r(String(e),"Key cannot be empty"),{path:`/permissions/${e}`,method:"DELETE"});var Vo=e=>()=>(r(e,"Keys cannot be empty"),{path:"/policies",body:JSON.stringify(e),method:"DELETE"}),Mo=e=>()=>(r(String(e),"Key cannot be empty"),{path:`/policies/${e}`,method:"DELETE"});var zo=e=>()=>(r(e,"Keys cannot be empty"),{path:"/presets",body:JSON.stringify(e),method:"DELETE"}),Xo=e=>()=>(r(String(e),"Key cannot be empty"),{path:`/presets/${e}`,method:"DELETE"});var ea=(e,t)=>()=>(r(e,"Collection cannot be empty"),r(t,"Field cannot be empty"),{path:`/relations/${e}/${t}`,method:"DELETE"});var oa=e=>()=>(r(e,"Keys cannot be empty"),{path:"/roles",body:JSON.stringify(e),method:"DELETE"}),aa=e=>()=>(r(String(e),"Key cannot be empty"),{path:`/roles/${e}`,method:"DELETE"});var ia=e=>()=>(r(e,"Keys cannot be empty"),{path:"/shares",body:JSON.stringify(e),method:"DELETE"}),na=e=>()=>(r(String(e),"Key cannot be empty"),{path:`/shares/${e}`,method:"DELETE"});var ua=e=>()=>(r(e,"Keys cannot be empty"),{path:"/translations",body:JSON.stringify(e),method:"DELETE"}),ha=e=>()=>(r(String(e),"Key cannot be empty"),{path:`/translations/${e}`,method:"DELETE"});var Sa=e=>()=>(r(e,"Keys cannot be empty"),{path:"/users",body:JSON.stringify(e),method:"DELETE"}),la=e=>()=>(r(String(e),"Key cannot be empty"),{path:`/users/${e}`,method:"DELETE"});var xa=e=>()=>(r(e,"Keys cannot be empty"),{path:"/versions",body:JSON.stringify(e),method:"DELETE"}),Ta=e=>()=>(r(e,"Key cannot be empty"),{path:`/versions/${e}`,method:"DELETE"});var ga=e=>()=>(r(e,"Keys cannot be empty"),{path:"/webhooks",body:JSON.stringify(e),method:"DELETE"}),ba=e=>()=>(r(String(e),"Key cannot be empty"),{path:`/webhooks/${e}`,method:"DELETE"});var qa=e=>()=>({path:"/activity",params:e??{},method:"GET"}),za=(e,t)=>()=>(r(String(e),"Key cannot be empty"),{path:`/activity/${e}`,params:t??{},method:"GET"});var ts=(e,t)=>()=>{let o=String(e);return r(o,"Collection cannot be empty"),{path:j(o)?`/${o.substring(9)}`:`/items/${o}`,method:"GET",params:{...t.query??{},...t.groupBy?{groupBy:t.groupBy}:{},aggregate:t.aggregate}}};var as=(e,t)=>()=>(r(String(e),"Key cannot be empty"),{path:`/assets/${e}`,params:t??{},method:"GET",onResponse:o=>o.body}),ss=(e,t)=>()=>(r(String(e),"Key cannot be empty"),{path:`/assets/${e}`,params:t??{},method:"GET",onResponse:o=>o.blob()}),ms=(e,t)=>()=>(r(String(e),"Key cannot be empty"),{path:`/assets/${e}`,params:t??{},method:"GET",onResponse:o=>o.arrayBuffer()});var cs=()=>()=>({path:"/collections",method:"GET"}),ps=e=>()=>(r(e,"Collection cannot be empty"),{path:`/collections/${e}`,method:"GET"});var ys=e=>()=>({path:"/comments",params:e??{},method:"GET"}),ds=(e,t)=>()=>(r(String(e),"Key cannot be empty"),{path:`/comments/${e}`,params:t??{},method:"GET"});var fs=e=>()=>({path:"/dashboards",params:e??{},method:"GET"}),Qs=(e,t)=>()=>(r(String(e),"Key cannot be empty"),{path:`/dashboards/${e}`,params:t??{},method:"GET"});var Ts=()=>()=>({path:"/extensions/",method:"GET"});var gs=()=>()=>({path:"/fields",method:"GET"}),bs=e=>()=>(r(e,"Collection cannot be empty"),{path:`/fields/${e}`,method:"GET"}),Ds=(e,t)=>()=>(r(e,"Collection cannot be empty"),r(t,"Field cannot be empty"),{path:`/fields/${e}/${t}`,method:"GET"});var js=e=>()=>({path:"/files",params:e??{},method:"GET"}),Is=(e,t)=>()=>(r(String(e),"Key cannot be empty"),{path:`/files/${e}`,params:t??{},method:"GET"});var As=e=>()=>({path:"/flows",params:e??{},method:"GET"}),ws=(e,t)=>()=>(r(String(e),"Key cannot be empty"),{path:`/flows/${e}`,params:t??{},method:"GET"});var Us=e=>()=>({path:"/folders",params:e??{},method:"GET"}),Js=(e,t)=>()=>(r(String(e),"Key cannot be empty"),{path:`/folders/${e}`,params:t??{},method:"GET"});var Gs=(e,t)=>()=>(r(String(e),"Collection cannot be empty"),x(e,"Cannot use readItems for core collections"),{path:`/items/${e}`,params:t??{},method:"GET"}),Ks=(e,t,o)=>()=>(r(String(e),"Collection cannot be empty"),x(e,"Cannot use readItem for core collections"),r(String(t),"Key cannot be empty"),{path:`/items/${e}/${t}`,params:o??{},method:"GET"});var Hs=e=>()=>({path:"/notifications",params:e??{},method:"GET"}),_s=(e,t)=>()=>(r(String(e),"Key cannot be empty"),{path:`/notifications/${e}`,params:t??{},method:"GET"});var Bs=e=>()=>({path:"/operations",params:e??{},method:"GET"}),qs=(e,t)=>()=>(r(String(e),"Key cannot be empty"),{path:`/operations/${e}`,params:t??{},method:"GET"});var Ys=e=>()=>({path:"/panels",params:e??{},method:"GET"}),Zs=(e,t)=>()=>(r(String(e),"Key cannot be empty"),{path:`/panels/${e}`,params:t??{},method:"GET"});var rm=e=>()=>({path:"/permissions",params:e??{},method:"GET"}),om=(e,t)=>()=>(r(String(e),"Key cannot be empty"),{path:`/permissions/${e}`,params:t??{},method:"GET"}),am=(e,t)=>()=>(r(String(e),"Collection cannot be empty"),{path:`/permissions/me/${t?`${e}/${t}`:`${e}`}`,method:"GET"}),sm=()=>()=>({path:"/permissions/me",method:"GET"});var nm=e=>()=>({path:"/policies",params:e??{},method:"GET"}),cm=(e,t)=>()=>(r(String(e),"Key cannot be empty"),{path:`/policies/${e}`,params:t??{},method:"GET"}),pm=()=>()=>({path:"/policies/me/globals",method:"GET"});var ym=e=>()=>({path:"/presets",params:e??{},method:"GET"}),dm=(e,t)=>()=>(r(String(e),"Key cannot be empty"),{path:`/presets/${e}`,params:t??{},method:"GET"});var fm=()=>()=>({path:"/relations",method:"GET"}),Qm=e=>()=>({path:`/relations/${e}`,method:"GET"}),xm=(e,t)=>()=>(r(e,"Collection cannot be empty"),r(t,"Field cannot be empty"),{path:`/relations/${e}/${t}`,method:"GET"});var Rm=e=>()=>({path:"/revisions",params:e??{},method:"GET"}),gm=(e,t)=>()=>(r(String(e),"Key cannot be empty"),{path:`/revisions/${e}`,params:t??{},method:"GET"});var Om=e=>()=>({path:"/roles",params:e??{},method:"GET"}),Pm=(e,t)=>()=>(r(String(e),"Key cannot be empty"),{path:`/roles/${e}`,params:t??{},method:"GET"}),jm=e=>()=>({path:"/roles/me",params:e??{},method:"GET"});var Em=e=>()=>({path:"/settings",params:e??{},method:"GET"});var wm=e=>()=>({path:"/shares",params:e??{},method:"GET"}),Nm=(e,t)=>()=>(r(String(e),"Key cannot be empty"),{path:`/shares/${e}`,params:t??{},method:"GET"});var Jm=(e,t)=>()=>(r(String(e),"Collection cannot be empty"),x(e,"Cannot use readSingleton for core collections"),{path:`/items/${e}`,params:t??{},method:"GET"});var Gm=e=>()=>({path:"/translations",params:e??{},method:"GET"}),Km=(e,t)=>()=>(r(String(e),"Key cannot be empty"),{path:`/translations/${e}`,params:t??{},method:"GET"});var Hm=e=>()=>({path:"/users",params:e??{},method:"GET"}),_m=(e,t)=>()=>(r(String(e),"Key cannot be empty"),{path:`/users/${e}`,params:t??{},method:"GET"}),Vm=e=>()=>({path:"/users/me",params:e??{},method:"GET"});var qm=e=>()=>({path:"/versions",params:e??{},method:"GET"}),zm=(e,t)=>()=>(r(String(e),"Key cannot be empty"),{path:`/versions/${e}`,params:t??{},method:"GET"});var Zm=e=>()=>({path:"/webhooks",params:e??{},method:"GET"}),ei=(e,t)=>()=>(r(String(e),"Key cannot be empty"),{path:`/webhooks/${e}`,params:t??{},method:"GET"});var Fi=e=>()=>({method:"POST",path:"/schema/apply",body:JSON.stringify(e)});var wi=(e,t=!1)=>()=>({method:"POST",path:"/schema/diff",params:t?{force:t}:{},body:JSON.stringify(e)});var vi=()=>()=>({method:"GET",path:"/schema/snapshot"});var Ki=(e="item")=>()=>({method:"GET",path:e==="item"?"/server/specs/graphql":"/server/specs/graphql/system"});var Li=()=>()=>({method:"GET",path:"/server/health"});var _i=()=>()=>({method:"GET",path:"/server/info"});var Mi=()=>()=>({method:"GET",path:"/server/specs/oas"});var qi=()=>()=>({method:"GET",path:"/server/ping"});var an=(e,t,o)=>()=>(r(e,"Collection cannot be empty"),{path:`/collections/${e}`,params:o??{},body:JSON.stringify(t),method:"PATCH"}),sn=(e,t)=>()=>({path:"/collections",params:t??{},body:JSON.stringify(e),method:"PATCH"});var cn=(e,t,o)=>()=>{let a={};return Array.isArray(e)?(r(e,"keysOrQuery cannot be empty"),a={keys:e}):(r(Object.keys(e),"keysOrQuery cannot be empty"),a={query:e}),a.data=t,{path:"/comments",params:o??{},body:JSON.stringify(a),method:"PATCH"}},pn=(e,t,o)=>()=>(r(String(e),"Key cannot be empty"),{path:`/comments/${e}`,params:o??{},body:JSON.stringify(t),method:"PATCH"});var yn=(e,t,o)=>()=>(r(e,"Keys cannot be empty"),{path:"/dashboards",params:o??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),dn=(e,t)=>()=>({path:"/dashboards",params:t??{},body:JSON.stringify(e),method:"PATCH"}),Sn=(e,t,o)=>()=>(r(e,"Key cannot be empty"),{path:`/dashboards/${e}`,params:o??{},body:JSON.stringify(t),method:"PATCH"});var Qn=(e,t,o)=>()=>(e!==null&&r(e,"Bundle cannot be an empty string"),r(t,"Name cannot be empty"),{path:e?`/extensions/${e}/${t}`:`/extensions/${t}`,params:{},body:JSON.stringify(o),method:"PATCH"});var Cn=(e,t,o,a)=>()=>(r(e,"Keys cannot be empty"),r(t,"Field cannot be empty"),{path:`/fields/${e}/${t}`,params:a??{},body:JSON.stringify(o),method:"PATCH"});var bn=(e,t,o)=>()=>(r(e,"Keys cannot be empty"),{path:"/files",params:o??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),Dn=(e,t)=>()=>({path:"/files",params:t??{},body:JSON.stringify(e),method:"PATCH"}),On=(e,t,o)=>()=>(r(e,"Key cannot be empty"),t instanceof FormData?{path:`/files/${e}`,params:o??{},body:t,method:"PATCH",headers:{"Content-Type":"multipart/form-data"}}:{path:`/files/${e}`,params:o??{},body:JSON.stringify(t),method:"PATCH"});var In=(e,t,o)=>()=>(r(e,"Keys cannot be empty"),{path:"/flows",params:o??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),En=(e,t)=>()=>({path:"/flows",params:t??{},body:JSON.stringify(e),method:"PATCH"}),Fn=(e,t,o)=>()=>(r(e,"Key cannot be empty"),{path:`/flows/${e}`,params:o??{},body:JSON.stringify(t),method:"PATCH"});var Nn=(e,t,o)=>()=>(r(e,"Keys cannot be empty"),{path:"/folders",params:o??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),vn=(e,t)=>()=>({path:"/folders",params:t??{},body:JSON.stringify(e),method:"PATCH"}),Un=(e,t,o)=>()=>(r(e,"Key cannot be empty"),{path:`/folders/${e}`,params:o??{},body:JSON.stringify(t),method:"PATCH"});var kn=(e,t,o,a)=>()=>{let s={};return r(String(e),"Collection cannot be empty"),x(e,"Cannot use updateItems for core collections"),Array.isArray(t)?(r(t,"keysOrQuery cannot be empty"),s={keys:t}):(r(Object.keys(t),"keysOrQuery cannot be empty"),s={query:t}),s.data=o,{path:`/items/${e}`,params:a??{},body:JSON.stringify(s),method:"PATCH"}},Gn=(e,t,o)=>()=>(r(String(e),"Collection cannot be empty"),x(e,"Cannot use updateItems for core collections"),{path:`/items/${e}`,params:o??{},body:JSON.stringify(t),method:"PATCH"}),Kn=(e,t,o,a)=>()=>(r(String(t),"Key cannot be empty"),r(String(e),"Collection cannot be empty"),x(e,"Cannot use updateItem for core collections"),{path:`/items/${e}/${t}`,params:a??{},body:JSON.stringify(o),method:"PATCH"});var Hn=(e,t,o)=>()=>(r(e,"Keys cannot be empty"),{path:"/notifications",params:o??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),_n=(e,t)=>()=>({path:"/notifications",params:t??{},body:JSON.stringify(e),method:"PATCH"}),Vn=(e,t,o)=>()=>(r(e,"Key cannot be empty"),{path:`/notifications/${e}`,params:o??{},body:JSON.stringify(t),method:"PATCH"});var qn=(e,t,o)=>()=>(r(e,"Keys cannot be empty"),{path:"/operations",params:o??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),zn=(e,t)=>()=>({path:"/operations",params:t??{},body:JSON.stringify(e),method:"PATCH"}),Xn=(e,t,o)=>()=>(r(e,"Key cannot be empty"),{path:`/operations/${e}`,params:o??{},body:JSON.stringify(t),method:"PATCH"});var ec=(e,t,o)=>()=>(r(e,"Keys cannot be empty"),{path:"/panels",params:o??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),tc=(e,t)=>()=>({path:"/panels",params:t??{},body:JSON.stringify(e),method:"PATCH"}),rc=(e,t,o)=>()=>(r(e,"Key cannot be empty"),{path:`/panels/${e}`,params:o??{},body:JSON.stringify(t),method:"PATCH"});var sc=(e,t,o)=>()=>(r(e,"Keys cannot be empty"),{path:"/permissions",params:o??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),mc=(e,t)=>()=>({path:"/permissions",params:t??{},body:JSON.stringify(e),method:"PATCH"}),ic=(e,t,o)=>()=>(r(String(e),"Key cannot be empty"),{path:`/permissions/${e}`,params:o??{},body:JSON.stringify(t),method:"PATCH"});var pc=(e,t,o)=>()=>(r(e,"Keys cannot be empty"),{path:"/policies",params:o??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),uc=(e,t)=>()=>({path:"/policies",params:t??{},body:JSON.stringify(e),method:"PATCH"}),hc=(e,t,o)=>()=>(r(String(e),"Key cannot be empty"),{path:`/policies/${e}`,params:o??{},body:JSON.stringify(t),method:"PATCH"});var Sc=(e,t,o)=>()=>(r(e,"Keys cannot be empty"),{path:"/presets",params:o??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),lc=(e,t)=>()=>({path:"/presets",params:t??{},body:JSON.stringify(e),method:"PATCH"}),fc=(e,t,o)=>()=>(r(String(e),"Key cannot be empty"),{path:`/presets/${e}`,params:o??{},body:JSON.stringify(t),method:"PATCH"});var Tc=(e,t,o,a)=>()=>(r(e,"Collection cannot be empty"),r(t,"Field cannot be empty"),{path:`/relations/${e}/${t}`,params:a??{},body:JSON.stringify(o),method:"PATCH"});var gc=(e,t,o)=>()=>(r(e,"Keys cannot be empty"),{path:"/roles",params:o??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),bc=(e,t)=>()=>({path:"/roles",params:t??{},body:JSON.stringify(e),method:"PATCH"}),Dc=(e,t,o)=>()=>(r(e,"Key cannot be empty"),{path:`/roles/${e}`,params:o??{},body:JSON.stringify(t),method:"PATCH"});var Pc=(e,t)=>()=>({path:"/settings",params:t??{},body:JSON.stringify(e),method:"PATCH"});var Ec=(e,t,o)=>()=>(r(e,"Keys cannot be empty"),{path:"/shares",params:o??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),Fc=(e,t)=>()=>({path:"/shares",params:t??{},body:JSON.stringify(e),method:"PATCH"}),Ac=(e,t,o)=>()=>(r(e,"Key cannot be empty"),{path:`/shares/${e}`,params:o??{},body:JSON.stringify(t),method:"PATCH"});var vc=(e,t,o)=>()=>(r(String(e),"Collection cannot be empty"),x(e,"Cannot use updateSingleton for core collections"),{path:`/items/${e}`,params:o??{},body:JSON.stringify(t),method:"PATCH"});var $c=(e,t,o)=>()=>(r(e,"Keys cannot be empty"),{path:"/translations",params:o??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),kc=(e,t)=>()=>({path:"/translations",params:t??{},body:JSON.stringify(e),method:"PATCH"}),Gc=(e,t,o)=>()=>(r(String(e),"Key cannot be empty"),{path:`/translations/${e}`,params:o??{},body:JSON.stringify(t),method:"PATCH"});var Lc=(e,t,o)=>()=>(r(e,"Keys cannot be empty"),{path:"/users",params:o??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),Hc=(e,t)=>()=>({path:"/users",params:t??{},body:JSON.stringify(e),method:"PATCH"}),_c=(e,t,o)=>()=>(r(e,"Key cannot be empty"),{path:`/users/${e}`,params:o??{},body:JSON.stringify(t),method:"PATCH"}),Vc=(e,t)=>()=>({path:"/users/me",params:t??{},body:JSON.stringify(e),method:"PATCH"});var qc=(e,t,o)=>()=>(r(e,"Keys cannot be empty"),{path:"/versions",params:o??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),zc=(e,t)=>()=>({path:"/versions",params:t??{},body:JSON.stringify(e),method:"PATCH"}),Xc=(e,t,o)=>()=>(r(e,"Key cannot be empty"),{path:`/versions/${e}`,params:o??{},body:JSON.stringify(t),method:"PATCH"});var ep=(e,t,o)=>()=>(r(e,"Keys cannot be empty"),{path:"/webhooks",params:o??{},body:JSON.stringify({keys:e,data:t}),method:"PATCH"}),tp=(e,t,o)=>()=>(r(String(e),"Key cannot be empty"),{path:`/webhooks/${e}`,params:o??{},body:JSON.stringify(t),method:"PATCH"});var jp=()=>()=>({method:"POST",path:"/utils/cache/clear"});var Ep=(e,t,o,a)=>()=>({method:"POST",path:`/utils/export/${e}`,body:JSON.stringify({format:t,query:o,file:a})});var Ap=(e,t,o)=>()=>e==="GET"?{path:`/flows/trigger/${t}`,params:o??{},method:"GET"}:{path:`/flows/trigger/${t}`,body:JSON.stringify(o??{}),method:"POST"};var Np=e=>()=>({method:"POST",path:"/utils/hash/generate",body:JSON.stringify({string:e})}),vp=(e,t)=>()=>({method:"POST",path:"/utils/hash/verify",body:JSON.stringify({string:e,hash:t})});var Jp=(e,t)=>()=>({path:`/utils/import/${e}`,method:"POST",body:t,headers:{"Content-Type":"multipart/form-data"}});var kp=(e,t)=>()=>({path:`/operations/trigger/${e}`,body:JSON.stringify(t??{}),method:"POST"});var Kp=(e,t,o="cookie")=>()=>({path:"/shares/auth",method:"POST",body:JSON.stringify({share:e,password:t,mode:o})}),Wp=(e,t)=>()=>({path:"/shares/invite",method:"POST",body:JSON.stringify({share:e,emails:t})}),Lp=e=>()=>({path:`/shares/info/${e}`,method:"GET"});var _p=(e,t,o)=>()=>({method:"POST",path:`/utils/sort/${e}`,body:JSON.stringify({item:t,to:o})});var Mp=(e,t,o)=>()=>({path:"/users/invite",method:"POST",body:JSON.stringify({email:e,role:t,...o?{invite_url:o}:{}})}),Bp=(e,t)=>()=>({path:"/users/invite/accept",method:"POST",body:JSON.stringify({token:e,password:t})}),qp=(e,t,o={})=>()=>({path:"/users/register",method:"POST",body:JSON.stringify({email:e,password:t,...o})}),zp=e=>()=>({path:"/users/register/verify-email",params:{token:e},method:"GET"}),Xp=e=>()=>({path:"/users/me/tfa/generate",method:"POST",body:JSON.stringify({password:e})}),Yp=(e,t)=>()=>({path:"/users/me/tfa/enable",method:"POST",body:JSON.stringify({secret:e,otp:t})}),Zp=e=>()=>({path:"/users/me/tfa/disable",method:"POST",body:JSON.stringify({otp:e})});var ru=(e,t)=>()=>(r(e,"ID cannot be empty"),{path:`/versions/${e}/save`,method:"POST",body:JSON.stringify(t)}),ou=e=>()=>(r(e,"ID cannot be empty"),{path:`/versions/${e}/compare`,method:"GET"}),au=(e,t,o)=>()=>(r(e,"ID cannot be empty"),{path:`/versions/${e}/promote`,method:"POST",body:JSON.stringify(o?{mainHash:t,fields:o}:{mainHash:t})});var mu=e=>()=>({method:"GET",path:"/utils/random/string",params:e!==void 0?{length:e}:{}});var B={},Fu=(e={})=>t=>{let o={...B,...e};return{async request(a){let s=a();if(s.headers||(s.headers={}),"Content-Type"in s.headers?s.headers["Content-Type"]==="multipart/form-data"&&delete s.headers["Content-Type"]:s.headers["Content-Type"]="application/json","getToken"in this&&!("Authorization"in s.headers)){let u=await this.getToken();u&&(s.headers.Authorization=`Bearer ${u}`)}let c=g(t.url,s.path,s.params),i={method:s.method??"GET",headers:s.headers??{}};"credentials"in o&&(i.credentials=o.credentials),s.body&&(i.body=s.body),s.onRequest&&(i=await s.onRequest(i)),o.onRequest&&(i=await o.onRequest(i));let p=await b(c.toString(),i,t.globals.fetch);return"onResponse"in s&&(p=await s.onResponse(p,i)),"onResponse"in e&&(p=await e.onResponse(p,i)),p}}};function wu(e,t){return()=>{let o=e();return typeof t=="function"?o.onRequest=t:o.onRequest=a=>({...a,...t}),o}}function Uu(e){return()=>{let t=e();return t.method==="GET"&&t.params&&(t.method="SEARCH",t.body=JSON.stringify({query:{...t.params,fields:U(t.params.fields??[])}}),delete t.params),t}}function $u(e,t){return()=>{let o=t();return e&&(o.headers||(o.headers={}),o.headers.Authorization=`Bearer ${e}`),o}}function Gu(e){return()=>e}export{Bp as acceptUserInvite,ts as aggregate,N as auth,Kp as authenticateShare,ne as authentication,jp as clearCache,ou as compareContentVersion,dt as createCollection,ft as createComment,lt as createComments,fr as createContentVersion,lr as createContentVersions,Tt as createDashboard,xt as createDashboards,le as createDirectus,Rt as createField,jt as createFlow,Pt as createFlows,Ft as createFolder,Et as createFolders,Ut as createItem,vt as createItems,kt as createNotification,$t as createNotifications,Wt as createOperation,Kt as createOperations,_t as createPanel,Ht as createPanels,Bt as createPermission,Mt as createPermissions,zt as createPolicies,Xt as createPolicy,er as createPreset,Zt as createPresets,rr as createRelation,sr as createRole,ar as createRoles,nr as createShare,ir as createShares,ur as createTranslation,pr as createTranslations,dr as createUser,yr as createUsers,Tr as createWebhook,xr as createWebhooks,Gu as customEndpoint,Hr as deleteCollection,oo as deleteComment,ro as deleteComments,Ta as deleteContentVersion,xa as deleteContentVersions,io as deleteDashboard,mo as deleteDashboards,po as deleteField,So as deleteFile,yo as deleteFiles,xo as deleteFlow,Qo as deleteFlows,go as deleteFolder,Ro as deleteFolders,Po as deleteItem,Oo as deleteItems,Fo as deleteNotification,Eo as deleteNotifications,vo as deleteOperation,No as deleteOperations,ko as deletePanel,$o as deletePanels,Lo as deletePermission,Wo as deletePermissions,Vo as deletePolicies,Mo as deletePolicy,Xo as deletePreset,zo as deletePresets,ea as deleteRelation,aa as deleteRole,oa as deleteRoles,na as deleteShare,ia as deleteShares,ha as deleteTranslation,ua as deleteTranslations,la as deleteUser,Sa as deleteUsers,ba as deleteWebhook,ga as deleteWebhooks,Zp as disableTwoFactor,Yp as enableTwoFactor,U as formatFields,Np as generateHash,Xp as generateTwoFactorSecret,v as generateUid,F as getAuthEndpoint,Te as graphql,Dt as importFile,Wp as inviteShare,Mp as inviteUser,qe as login,Xe as logout,G as memoryStorage,w as messageCallback,Ze as passwordRequest,tt as passwordReset,W as pong,au as promoteContentVersion,J as queryToParams,mu as randomString,qa as readActivities,za as readActivity,ms as readAssetArrayBuffer,ss as readAssetBlob,as as readAssetRaw,ps as readCollection,cs as readCollections,ds as readComment,ys as readComments,zm as readContentVersion,qm as readContentVersions,Qs as readDashboard,fs as readDashboards,Ts as readExtensions,Ds as readField,gs as readFields,bs as readFieldsByCollection,Is as readFile,js as readFiles,ws as readFlow,As as readFlows,Js as readFolder,Us as readFolders,Ki as readGraphqlSdl,Ks as readItem,am as readItemPermissions,Gs as readItems,Vm as readMe,_s as readNotification,Hs as readNotifications,Mi as readOpenApiSpec,qs as readOperation,Bs as readOperations,Zs as readPanel,Ys as readPanels,om as readPermission,rm as readPermissions,nm as readPolicies,cm as readPolicy,pm as readPolicyGlobals,dm as readPreset,ym as readPresets,ot as readProviders,xm as readRelation,Qm as readRelationByCollection,fm as readRelations,gm as readRevision,Rm as readRevisions,Pm as readRole,Om as readRoles,jm as readRolesMe,Em as readSettings,Nm as readShare,Lp as readShareInfo,wm as readShares,Jm as readSingleton,Km as readTranslation,Gm as readTranslations,_m as readUser,sm as readUserPermissions,Hm as readUsers,ei as readWebhook,Zm as readWebhooks,ve as realtime,st as refresh,qp as registerUser,zp as registerUserVerify,Fu as rest,ru as saveToContentVersion,Fi as schemaApply,wi as schemaDiff,vi as schemaSnapshot,Li as serverHealth,_i as serverInfo,qi as serverPing,Je as sleep,pe as staticToken,x as throwIfCoreCollection,r as throwIfEmpty,Ap as triggerFlow,kp as triggerOperation,an as updateCollection,sn as updateCollectionsBatch,pn as updateComment,cn as updateComments,Xc as updateContentVersion,qc as updateContentVersions,zc as updateContentVersionsBatch,Sn as updateDashboard,yn as updateDashboards,dn as updateDashboardsBatch,Qn as updateExtension,Cn as updateField,On as updateFile,bn as updateFiles,Dn as updateFilesBatch,Fn as updateFlow,In as updateFlows,En as updateFlowsBatch,Un as updateFolder,Nn as updateFolders,vn as updateFoldersBatch,Kn as updateItem,kn as updateItems,Gn as updateItemsBatch,Vc as updateMe,Vn as updateNotification,Hn as updateNotifications,_n as updateNotificationsBatch,Xn as updateOperation,qn as updateOperations,zn as updateOperationsBatch,rc as updatePanel,ec as updatePanels,tc as updatePanelsBatch,ic as updatePermission,sc as updatePermissions,mc as updatePermissionsBatch,pc as updatePolicies,uc as updatePoliciesBatch,hc as updatePolicy,fc as updatePreset,Sc as updatePresets,lc as updatePresetsBatch,Tc as updateRelation,Dc as updateRole,gc as updateRoles,bc as updateRolesBatch,Pc as updateSettings,Ac as updateShare,Ec as updateShares,Fc as updateSharesBatch,vc as updateSingleton,Gc as updateTranslation,$c as updateTranslations,kc as updateTranslationsBatch,_c as updateUser,Lc as updateUsers,Hc as updateUsersBatch,tp as updateWebhook,ep as updateWebhooks,bt as uploadFiles,_p as utilitySort,Ep as utilsExport,Jp as utilsImport,vp as verifyHash,wu as withOptions,Uu as withSearch,$u as withToken};
//# sourceMappingURL=index.js.map